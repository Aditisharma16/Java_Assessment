package com.q2;

import java.util.Random;

class MyRandom implements Runnable {

	private Random random;
	private int value, sum;
	private boolean isDone = false;
    private int count=0;

	
	public MyRandom() {
		random = new Random();
	}

	@Override
	public void run() {

		value = random.nextInt(10) + 1;
		sum += value;
		
		System.out.println("[" + Thread.currentThread().getName() + ":" + value + " ]");

		count++;
		if (count == 5) {
			isDone = true;
			synchronized (this) {
				notifyAll();
			}
		}
	}

	public synchronized int getSum() {
		if (!isDone) {
			try {
				wait();
			} catch (InterruptedException e) {
				e.printStackTrace();
			}
		}
		return sum;

	}

}

public class Multithreading {

	public static void main(String[] args) {
		MyRandom job = new MyRandom();

		Thread t1 = new Thread(job, "Thread1");
		Thread t2 = new Thread(job, "Thread2");
		Thread t3 = new Thread(job, "Thread3");
		Thread t4 = new Thread(job, "Thread4");
		Thread t5 = new Thread(job, "Thread5");

		t1.start();
		t2.start();
		t3.start();
		t4.start();
		t5.start();

		System.out.println("Sum of random number generated by threads : " + job.getSum());

		System.out.println("ending the main: " + Thread.currentThread().getName());

	}
}
